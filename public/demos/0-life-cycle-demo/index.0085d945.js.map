{"mappings":"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","sources":["demos/0-life-cycle-demo/index.tsx","src/reflex/debug.ts","demos/0-life-cycle-demo/LifecycleDemoApp.tsx","demos/demoHelpers.ts"],"sourcesContent":["import { h, render } from \"../../src/reflex\";\nimport { trackPerformances, setReflexDebug } from \"../../src/reflex/debug\";\nimport { LifecycleDemoApp } from \"./LifecycleDemoApp\";\n\n// -----------------------------------------------------------------------------\n\nsetReflexDebug( true )\n\nexport function init () {\n\tconst p = trackPerformances(\"Root rendering\")\n\trender( <LifecycleDemoApp />, document.body )\n\tp();\n}\n\ninit();\n","\n// ----------------------------------------------------------------------------- ENABLE / DISABLE\n\nlet _enableReflexDebug = false;\n\nexport function getReflexDebug () { return _enableReflexDebug }\nexport function setReflexDebug (value:boolean) {\n\t_enableReflexDebug = value\n}\n\n// ----------------------------------------------------------------------------- TRACK PERFORMANCES\n\nexport function trackPerformances ( subject:string ) {\n\tif ( !_enableReflexDebug || process.env.NODE_ENV === \"production\" )\n\t\treturn () => {};\n\tconst start = performance.now()\n\treturn () => {\n\t\tconst delta = ~~( performance.now() - start )\n\t\tconsole.info( subject, delta < 1000 ? `${delta}ms` : `${delta/1000}s`)\n\t}\n}","import { h, state, ref, refs, mounted, unmounted } from \"../../src/reflex\";\nimport { colorList, createUID, foodList, pickRandom } from \"../demoHelpers\";\n\nfunction SubChild ( props ) {\n\tconst titleRef = ref()\n\t// Local stateless variable without ref ðŸ‘€\n\tlet clicked = 0\n\tmounted(() => {\n\t\tconsole.log(`SubChild mounted ${titleRef.dom.innerHTML}`)\n\t\treturn () => {\n\t\t\tconsole.log(`SubChild unmounted ${clicked}`)\n\t\t}\n\t})\n\tfunction onClick () {\n\t\tconsole.log(`Clicked ${++clicked}`)\n\t}\n\treturn () => <div onClick={ onClick }>\n\t\t<table>\n\t\t\t<tr>\n\t\t\t\t<td>Id :</td>\n\t\t\t\t<td>{ props.item.id }</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td>Name :</td>\n\t\t\t\t<td ref={ titleRef }>{ props.item.title }</td>\n\t\t\t</tr>\n\t\t</table>\n\t</div>\n}\n\nfunction ListItem ( props ) {\n\tmounted(() => {\n\t\tconsole.log(\"List item mounted\")\n\t})\n\tunmounted(() => {\n\t\tconsole.log(\"List item unmounted\")\n\t});\n\n\treturn () => <div style={{ border: `1px solid white` }}>\n\t\t<span>ListItem</span>\n\t\t<SubChild item={ props.item }/>\n\t\t<button onClick={ e => props.removeClicked( props.item ) }>Remove</button>\n\t</div>\n}\n\nexport function LifecycleDemoApp () {\n\n\tconst isListVisible = state( true )\n\tconst toggleListVisibility = () => isListVisible.set( !isListVisible.value )\n\n\tconst list = state([])\n\n\tconst itemRefs = refs()\n\n\tfunction addListItem () {\n\t\tconst item = {\n\t\t\tid: createUID(),\n\t\t\ttitle: `${pickRandom(colorList)} ${pickRandom(foodList)}`,\n\t\t}\n\t\tlist.set( [...list.value, item ] );\n\t}\n\n\tfunction removeListItem ( item ) {\n\t\tlist.set( list.value.filter( c => c != item ) )\n\t}\n\n\tfunction List () {\n\t\treturn <div>\n\t\t\t<button onClick={ e => addListItem() }>Add list item</button>\n\t\t\t<h3>Items :</h3>\n\t\t\t<div>\n\t\t\t\t{ list.value.map( item =>\n\t\t\t\t\t<ListItem\n\t\t\t\t\t\tref={ itemRefs } key={ item.id }\n\t\t\t\t\t\titem={ item }\n\t\t\t\t\t\tremoveClicked={ removeListItem }\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t}\n\n\treturn () => <div>\n\t\t<button onClick={ e => toggleListVisibility() }>\n\t\t\t{ isListVisible.value ? \"Hide list\" : \"Show list\" }\n\t\t</button>\n\t\t<br/><br/>\n\t\t{ isListVisible.value && <List pure={ false } /> }\n\t</div>\n}","\nexport const toHex = (n:number) => (~~n).toString(16)\nexport const createUID = () => `${toHex(Date.now())}-${toHex(Math.random() * 999999999)}`;\nexport const pickRandom = <G extends any>(array:G[]):G => array[ ~~(Math.random() * array.length) ]\nexport const rand = (max:number) => ~~(Math.random() * max)\nexport const randBoolean = (threshold = .5) => (Math.random() > threshold)\n\nexport const foodList = [\"Cheese\", \"Carrots\", \"Pastas\", \"Pizza\", \"Burgers\", \"Ham\", \"Salad\", \"Mustard\"]\nexport const colorList = [\"Red\", \"Blue\", \"Yellow\", \"Purple\", \"Orange\", \"Black\", \"White\", \"Green\"]\nexport const firstnameList = [\"Alfred\", \"Jessica\", \"Gwen\", \"Jeanne\"]\nexport const lastnameList = [\"Dupont\", \"Smith\", \"Stevensen\", \"Odea\"]\n"],"names":["$leUMy","parcelRequire","$228131962d4ca37f$var$_enableReflexDebug","$00c98e03044c15dd$export$7ea66e3774a60b67","n","toString","$00c98e03044c15dd$export$2e015b6955893291","array","Math","random","length","$00c98e03044c15dd$export$4815de0a6e6c5145","$00c98e03044c15dd$export$9afc515fe5566574","$cea7cc08f9b6a47b$var$SubChild","props","titleRef","ref","clicked","onClick","console","log","mounted","dom","innerHTML","h","item","id","title","$cea7cc08f9b6a47b$var$ListItem","unmounted","style","border","e","removeClicked","$cea7cc08f9b6a47b$export$68b582a213d1d1fa","isListVisible","state","list","itemRefs","refs","removeListItem","set","value","filter","c","List","Date","now","addListItem","map","key","pure","p","render","document","body","$47b8d2ed67d0e700$export$2cd8252107eb640b"],"version":3,"file":"index.0085d945.js.map"}