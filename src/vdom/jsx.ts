import { TEXT_NODE_TYPE_NAME, VNode } from "./index";

// NOTE : Keep it in a function and do not inline this
// It seems to be V8 optimized. @see Preact source code
export function createVNode ( type, props, key?, ref? ):VNode {
	return { type, props, key, ref }
}

export function h ( type, props, ...children ) {
	// Extract key and ref from props
	const { key, ref, ...nodeProps } = props
	// FIXME : TEMP, remove debug info or use them
	delete nodeProps.__self
	delete nodeProps.__source
	// Inject children in props
	nodeProps.children = ( children ?? [] ).map( child => (
		// Convert string and number children to text virtual nodes
		( ["string", "number"].indexOf( typeof child ) !== -1 )
		? createVNode( TEXT_NODE_TYPE_NAME, { value: child + '' })
		// Otherwise keep child generated by JSX
		: child
	))
	return createVNode( type, nodeProps, key, ref )
}
